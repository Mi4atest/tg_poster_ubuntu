@router.callback_query(PostCreation.confirmation, F.data == "confirm_create")
async def confirm_create_post(callback: CallbackQuery, state: FSMContext):
    """Create the post after confirmation."""
    # Get all data
    data = await state.get_data()
    text = data.get("text", "")
    photos = data.get("photos", [])
    videos = data.get("videos", [])

    # Send data to API
    await callback.message.edit_text("‚è≥ –°–æ–∑–¥–∞—é –ø–æ—Å—Ç...")

    try:
        post = await create_post_api(text, photos, videos)

        if post:
            # Format success message
            photo_count = len(photos)
            video_count = len(videos)
            post_name = post.get("name", "")

            success_text = f"‚úÖ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n\n"
            success_text += f"üìù {post_name}\n\n"

            if photo_count > 0:
                success_text += f"üì∑ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {photo_count}\n"

            if video_count > 0:
                success_text += f"üìπ –í–∏–¥–µ–æ: {video_count}\n"

            success_text += "\n–ü–æ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –µ–≥–æ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö."

            # Create keyboard for post actions
            buttons = [
                [InlineKeyboardButton(text="üìã –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–º –ø–æ—Å—Ç–∞–º", callback_data="pending_posts")],
                [InlineKeyboardButton(text="üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
            ]
            keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)

            await callback.message.edit_text(success_text, reply_markup=keyboard)

            # Reset state since we're done with post creation
            await state.clear()
            return
        else:
            await callback.message.edit_text(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
                reply_markup=get_main_keyboard()
            )
    except Exception as e:
        await callback.message.edit_text(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}",
            reply_markup=get_main_keyboard()
        )

    # Reset state
    await state.clear()

    await callback.answer()

@router.callback_query(PostCreation.confirmation, F.data == "back_to_videos")
async def back_to_videos_from_confirmation(callback: CallbackQuery, state: FSMContext):
    """Go back to adding videos from confirmation."""
    await callback.message.edit_text(
        "üìπ –í–µ—Ä–Ω–µ–º—Å—è –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –≤–∏–¥–µ–æ –¥–ª—è –ø–æ—Å—Ç–∞ (–¥–æ 50 –ú–ë).\n\n"
        "–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø–æ –æ–¥–Ω–æ–º—É –≤–∏–¥–µ–æ –∑–∞ —Ä–∞–∑.",
        reply_markup=get_skip_back_keyboard()
    )

    # Move back to videos state
    await state.set_state(PostCreation.waiting_for_videos)

    await callback.answer()

@router.callback_query(F.data == "pending_posts")
async def pending_posts_callback(callback: CallbackQuery, state: FSMContext):
    """Handle the 'Pending Posts' button."""
    # Clear any active state
    await state.clear()

    await callback.message.edit_text(
        "‚è≥ –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤...\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ."
    )

    # Fetch posts from API and display them
    from app.bot.handlers.post_management import show_pending_posts
    try:
        await show_pending_posts(callback.message)
    except Exception as e:
        print(f"Error showing pending posts: {str(e)}")
        await callback.message.edit_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤: {str(e)}",
            reply_markup=get_main_keyboard()
        )

    await callback.answer()

@router.callback_query(F.data == "back_to_main")
async def back_to_main_menu(callback: CallbackQuery, state: FSMContext):
    """Return to the main menu."""
    # Clear any active state
    await state.clear()

    await callback.message.edit_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–∏–Ω–≥–∞ –≤ —Å–æ—Ü—Å–µ—Ç–∏!\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–º–∏:",
        reply_markup=get_main_keyboard()
    )

    await callback.answer()

@router.callback_query(PostCreation.confirmation, F.data == "cancel_create")
async def cancel_create_post(callback: CallbackQuery, state: FSMContext):
    """Cancel post creation."""
    await callback.message.edit_text(
        "‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_keyboard()
    )

    # Reset state
    await state.clear()

    await callback.answer()
